// @ts-nocheck
/**
 * This file is generated by 'file2variable-cli'
 * It is not mean to be edited by hand
 */
import { createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from 'vue'
// tslint:disable
/* eslint-disable */

export function srcFrontTemplateHtml(_ctx, _cache) {
  return (_openBlock(), _createElementBlock("div", null, [
    (_ctx.showDialog)
      ? (_openBlock(), _createElementBlock("div", {
          key: 0,
          class: "joining"
        }, [
          _createElementVNode("div", { class: "center" }, [
            _createElementVNode("h4", { class: "message" }, _toDisplayString(_ctx.showFail ? _ctx.locale.ui.youAreDead : _ctx.locale.ui.joinGame), 1 /* TEXT */),
            _createTextVNode(" " + _toDisplayString(_ctx.locale.ui.yourName) + " ", 1 /* TEXT */),
            _withDirectives(_createElementVNode("input", {
              class: "txt-input",
              "onUpdate:modelValue": _cache[0] || (_cache[0] = $event => ((_ctx.userName) = $event)),
              onKeydown: _cache[1] || (_cache[1] = $event => (_ctx.stopPropagation($event))),
              onKeyup: _cache[2] || (_cache[2] = $event => (_ctx.stopPropagation($event)))
            }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [
              [_vModelText, _ctx.userName]
            ]),
            _createElementVNode("div", null, [
              _createElementVNode("a", {
                href: "javascript:void(0)",
                class: "btn joinBtn",
                onClick: _cache[3] || (_cache[3] = $event => (_ctx.join()))
              }, _toDisplayString(_ctx.locale.ui.joinByPressE), 1 /* TEXT */)
            ])
          ])
        ]))
      : _createCommentVNode("v-if", true),
    (_ctx.showMobileControl)
      ? (_openBlock(), _createElementBlock("div", {
          key: 1,
          class: "mobileController"
        }, [
          _createElementVNode("div", { class: "left" }, [
            _createElementVNode("div", {
              "data-act": "l",
              class: "moreBtn l",
              onTouchstart: _cache[4] || (_cache[4] = $event => (_ctx.touchstart($event))),
              onTouchend: _cache[5] || (_cache[5] = $event => (_ctx.touchend($event)))
            }, _toDisplayString(_ctx.locale.ui.left), 33 /* TEXT, HYDRATE_EVENTS */),
            _createElementVNode("div", {
              "data-act": "r",
              class: "moreBtn r",
              onTouchstart: _cache[6] || (_cache[6] = $event => (_ctx.touchstart($event))),
              onTouchend: _cache[7] || (_cache[7] = $event => (_ctx.touchend($event)))
            }, _toDisplayString(_ctx.locale.ui.right), 33 /* TEXT, HYDRATE_EVENTS */)
          ]),
          _createElementVNode("div", { class: "right" }, [
            _createElementVNode("div", {
              "data-act": "a",
              class: "moreBtn item",
              onTouchstart: _cache[8] || (_cache[8] = $event => (_ctx.touchstart($event))),
              onTouchend: _cache[9] || (_cache[9] = $event => (_ctx.touchend($event)))
            }, _toDisplayString(_ctx.locale.ui.item), 33 /* TEXT, HYDRATE_EVENTS */),
            _createElementVNode("div", {
              "data-act": "u",
              class: "moreBtn up",
              onTouchstart: _cache[10] || (_cache[10] = $event => (_ctx.touchstart($event))),
              onTouchend: _cache[11] || (_cache[11] = $event => (_ctx.touchend($event)))
            }, _toDisplayString(_ctx.locale.ui.up), 33 /* TEXT, HYDRATE_EVENTS */),
            _createElementVNode("div", {
              "data-act": "d",
              class: "moreBtn down",
              onTouchstart: _cache[12] || (_cache[12] = $event => (_ctx.touchstart($event))),
              onTouchend: _cache[13] || (_cache[13] = $event => (_ctx.touchend($event)))
            }, _toDisplayString(_ctx.locale.ui.down), 33 /* TEXT, HYDRATE_EVENTS */)
          ])
        ]))
      : _createCommentVNode("v-if", true),
    _createElementVNode("div", { class: "notice" }, [
      _createElementVNode("div", { class: "noticeFix" }, [
        _createElementVNode("div", { class: "noticeItem" }, _toDisplayString(_ctx.locale.ui.notice), 1 /* TEXT */)
      ])
    ]),
    _createElementVNode("div", { class: "fps" }, "fps: " + _toDisplayString(_ctx.fps), 1 /* TEXT */)
  ]))
}
export const staticProtocolProto = {
    "nested": {
        "ItemType": {
            "values": {
                "power": 0,
                "gun": 1,
                "mine": 2,
                "drug": 3,
                "hide": 4,
                "bomb": 5,
                "doublejump": 6,
                "flypack": 7,
                "grenade": 8
            }
        },
        "RequestProtocolKind": {
            "values": {
                "join": 2,
                "control": 4
            }
        },
        "ResponseProtocolKind": {
            "values": {
                "tick": 0,
                "initSuccess": 1,
                "joinSuccess": 3,
                "explode": 5,
                "userDead": 6
            }
        },
        "UserStatus": {
            "values": {
                "dieing": 0,
                "climbing": 1,
                "rolling2": 2,
                "standing": 3,
                "rolling": 4,
                "mining": 5,
                "crawling": 6,
                "falling": 7
            }
        },
        "Item": {
            "fields": {
                "x": {
                    "type": "uint32",
                    "id": 1
                },
                "y": {
                    "type": "uint32",
                    "id": 2
                },
                "type": {
                    "type": "ItemType",
                    "id": 3
                },
                "dead": {
                    "type": "bool",
                    "id": 4
                }
            }
        },
        "Mine": {
            "fields": {
                "x": {
                    "type": "uint32",
                    "id": 1
                },
                "y": {
                    "type": "uint32",
                    "id": 2
                },
                "dead": {
                    "type": "bool",
                    "id": 3
                }
            }
        },
        "Grenade": {
            "fields": {
                "x": {
                    "type": "uint32",
                    "id": 1
                },
                "y": {
                    "type": "uint32",
                    "id": 2
                },
                "r": {
                    "type": "uint32",
                    "id": 3
                }
            }
        },
        "User": {
            "fields": {
                "itemType": {
                    "type": "ItemType",
                    "id": 1
                },
                "itemCount": {
                    "type": "uint32",
                    "id": 2
                },
                "nearLadder": {
                    "type": "Ladder",
                    "id": 3
                },
                "faceing": {
                    "type": "int32",
                    "id": 4
                },
                "fireing": {
                    "type": "uint32",
                    "id": 5
                },
                "grenadeing": {
                    "type": "uint32",
                    "id": 6
                },
                "danger": {
                    "type": "bool",
                    "id": 7
                },
                "status": {
                    "type": "UserStatus",
                    "id": 8
                },
                "name": {
                    "type": "string",
                    "id": 9
                },
                "id": {
                    "type": "uint32",
                    "id": 10
                },
                "x": {
                    "type": "uint32",
                    "id": 11
                },
                "y": {
                    "type": "uint32",
                    "id": 12
                },
                "vy": {
                    "type": "uint32",
                    "id": 13
                },
                "score": {
                    "type": "uint32",
                    "id": 14
                },
                "dead": {
                    "type": "bool",
                    "id": 15
                },
                "doubleJumping": {
                    "type": "bool",
                    "id": 16
                },
                "flying": {
                    "type": "uint32",
                    "id": 17
                }
            }
        },
        "Door": {
            "fields": {
                "x": {
                    "type": "uint32",
                    "id": 1
                },
                "y": {
                    "type": "uint32",
                    "id": 2
                }
            }
        },
        "ItemGate": {
            "fields": {
                "x": {
                    "type": "uint32",
                    "id": 1
                },
                "y": {
                    "type": "float",
                    "id": 2
                }
            }
        },
        "Tick": {
            "fields": {
                "users": {
                    "rule": "repeated",
                    "type": "User",
                    "id": 1
                },
                "items": {
                    "rule": "repeated",
                    "type": "Item",
                    "id": 2
                },
                "mines": {
                    "rule": "repeated",
                    "type": "Mine",
                    "id": 3
                },
                "grenades": {
                    "rule": "repeated",
                    "type": "Grenade",
                    "id": 4
                }
            }
        },
        "MapData": {
            "fields": {
                "w": {
                    "type": "uint32",
                    "id": 1
                },
                "h": {
                    "type": "uint32",
                    "id": 2
                },
                "floors": {
                    "rule": "repeated",
                    "type": "uint32",
                    "id": 3
                },
                "ladders": {
                    "rule": "repeated",
                    "type": "Ladder",
                    "id": 4
                },
                "doors": {
                    "rule": "repeated",
                    "type": "Door",
                    "id": 5
                },
                "itemGates": {
                    "rule": "repeated",
                    "type": "ItemGate",
                    "id": 6
                }
            }
        },
        "InitSuccess": {
            "fields": {
                "map": {
                    "type": "MapData",
                    "id": 1
                }
            }
        },
        "Join": {
            "fields": {
                "userName": {
                    "type": "string",
                    "id": 1
                }
            }
        },
        "JoinSuccess": {
            "fields": {
                "userId": {
                    "type": "uint32",
                    "id": 1
                }
            }
        },
        "Control": {
            "fields": {
                "leftDown": {
                    "type": "uint32",
                    "id": 1
                },
                "rightDown": {
                    "type": "uint32",
                    "id": 2
                },
                "upDown": {
                    "type": "uint32",
                    "id": 3
                },
                "downDown": {
                    "type": "uint32",
                    "id": 4
                },
                "itemDown": {
                    "type": "uint32",
                    "id": 5
                },
                "leftPress": {
                    "type": "bool",
                    "id": 6
                },
                "rightPress": {
                    "type": "bool",
                    "id": 7
                },
                "upPress": {
                    "type": "bool",
                    "id": 8
                },
                "downPress": {
                    "type": "bool",
                    "id": 9
                },
                "itemPress": {
                    "type": "bool",
                    "id": 10
                }
            }
        },
        "Explode": {
            "fields": {
                "x": {
                    "type": "uint32",
                    "id": 1
                },
                "y": {
                    "type": "uint32",
                    "id": 2
                },
                "power": {
                    "type": "uint32",
                    "id": 3
                }
            }
        },
        "UserDead": {
            "fields": {
                "user": {
                    "type": "User",
                    "id": 1
                },
                "killer": {
                    "type": "User",
                    "id": 2
                }
            }
        },
        "RequestProtocol": {
            "fields": {
                "kind": {
                    "type": "RequestProtocolKind",
                    "id": 1
                },
                "join": {
                    "type": "Join",
                    "id": 2
                },
                "control": {
                    "type": "Control",
                    "id": 3
                }
            }
        },
        "ResponseProtocol": {
            "fields": {
                "kind": {
                    "type": "ResponseProtocolKind",
                    "id": 1
                },
                "initSuccess": {
                    "type": "InitSuccess",
                    "id": 2
                },
                "joinSuccess": {
                    "type": "JoinSuccess",
                    "id": 3
                },
                "tick": {
                    "type": "Tick",
                    "id": 4
                },
                "explode": {
                    "type": "Explode",
                    "id": 5
                },
                "userDead": {
                    "type": "UserDead",
                    "id": 6
                }
            }
        },
        "Ladder": {
            "fields": {
                "x": {
                    "type": "float",
                    "id": 1
                },
                "y1": {
                    "type": "uint32",
                    "id": 2
                },
                "y2": {
                    "type": "uint32",
                    "id": 3
                }
            }
        }
    }
}
/* eslint-enable */
// tslint:enable
